{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/luism/OneDrive/Escritorio/projects/PruebaTecnicaFullstack/client/data-traveler/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/luism/OneDrive/Escritorio/projects/PruebaTecnicaFullstack/client/data-traveler/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{getDestinations,createDestination,getDestinationById,searchDestinations,deleteDestination}from'../../services/api';import{FETCH_DESTINATIONS,ADD_DESTINATION,FETCH_DESTINATION,SEARCH_DESTINATIONS,DELETE_DESTINATION_SUCCESS}from'../../types/destinationTypes';// Acción para obtener todos los destinos turísticos\nexport var fetchDestinations=function fetchDestinations(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var destinations;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return getDestinations();case 2:destinations=_context.sent;dispatch({type:FETCH_DESTINATIONS,payload:destinations});case 4:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};// Acción para crear un nuevo destino turístico\nexport var addDestination=function addDestination(destination){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var newDestination;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return createDestination(destination);case 2:newDestination=_context2.sent;dispatch({type:ADD_DESTINATION,payload:newDestination});case 4:case\"end\":return _context2.stop();}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// Acción para obtener un destino turístico por su ID\nexport var fetchDestination=function fetchDestination(_id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){var destination;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return getDestinationById(_id);case 2:destination=_context3.sent;dispatch({type:FETCH_DESTINATION,payload:destination});case 4:case\"end\":return _context3.stop();}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};// Acción para buscar destinos turísticos por nombre o ubicación\nexport var searchDestination=function searchDestination(query){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch){var destinations;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return searchDestinations(query);case 2:destinations=_context4.sent;dispatch({type:SEARCH_DESTINATIONS,payload:destinations});case 4:case\"end\":return _context4.stop();}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};// accion para eliminar por id:\nexport var deleteDestinationByID=function deleteDestinationByID(_id){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(dispatch){var deleteDest;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:deleteDest=deleteDestination(_id);dispatch({type:DELETE_DESTINATION_SUCCESS,payload:deleteDest});case 2:case\"end\":return _context5.stop();}},_callee5);}));return function(_x5){return _ref5.apply(this,arguments);};}();};","map":{"version":3,"names":["getDestinations","createDestination","getDestinationById","searchDestinations","deleteDestination","FETCH_DESTINATIONS","ADD_DESTINATION","FETCH_DESTINATION","SEARCH_DESTINATIONS","DELETE_DESTINATION_SUCCESS","fetchDestinations","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","destinations","wrap","_callee$","_context","prev","next","sent","type","payload","stop","_x","apply","arguments","addDestination","destination","_ref2","_callee2","newDestination","_callee2$","_context2","_x2","fetchDestination","_id","_ref3","_callee3","_callee3$","_context3","_x3","searchDestination","query","_ref4","_callee4","_callee4$","_context4","_x4","deleteDestinationByID","_ref5","_callee5","deleteDest","_callee5$","_context5","_x5"],"sources":["C:/Users/luism/OneDrive/Escritorio/projects/PruebaTecnicaFullstack/client/data-traveler/src/state/actions/destinationActions.js"],"sourcesContent":["import {\r\n    getDestinations,\r\n    createDestination,\r\n    getDestinationById,\r\n    searchDestinations,\r\n    deleteDestination\r\n  } from '../../services/api';\r\n  import {\r\n    FETCH_DESTINATIONS,\r\n    ADD_DESTINATION,\r\n    FETCH_DESTINATION,\r\n    SEARCH_DESTINATIONS,\r\n    DELETE_DESTINATION_SUCCESS\r\n  } from '../../types/destinationTypes';\r\n  \r\n  // Acción para obtener todos los destinos turísticos\r\n  export const fetchDestinations = () => async (dispatch) => {\r\n    const destinations = await getDestinations();\r\n    dispatch({ type: FETCH_DESTINATIONS, payload: destinations });\r\n  };\r\n  \r\n  // Acción para crear un nuevo destino turístico\r\n  export const addDestination = (destination) => async (dispatch) => {\r\n    const newDestination = await createDestination(destination);\r\n    dispatch({ type: ADD_DESTINATION, payload: newDestination });\r\n  };\r\n  \r\n  // Acción para obtener un destino turístico por su ID\r\n  export const fetchDestination = (_id) => async (dispatch) => {\r\n    const destination = await getDestinationById(_id);\r\n    dispatch({ type: FETCH_DESTINATION, payload: destination });\r\n  };\r\n  \r\n  // Acción para buscar destinos turísticos por nombre o ubicación\r\n  export const searchDestination = (query) => async (dispatch) => {\r\n    const destinations = await searchDestinations(query);\r\n    dispatch({ type: SEARCH_DESTINATIONS, payload: destinations });\r\n  };\r\n  \r\n  // accion para eliminar por id:\r\n  export const deleteDestinationByID = (_id) => async (dispatch) => {\r\n    const deleteDest = deleteDestination(_id);\r\n        dispatch({ type: DELETE_DESTINATION_SUCCESS, payload: deleteDest });\r\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}