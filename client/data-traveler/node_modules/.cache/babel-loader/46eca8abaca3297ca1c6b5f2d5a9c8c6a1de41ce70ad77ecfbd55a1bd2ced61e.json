{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/luism/OneDrive/Escritorio/projects/PruebaTecnicaFullstack/client/data-traveler/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/luism/OneDrive/Escritorio/projects/PruebaTecnicaFullstack/client/data-traveler/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';var BASE_URL='http://localhost:3001';// Reemplaza con la URL de tu API backend\n// Función para obtener todos los destinos turísticos\nexport var getDestinations=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"\".concat(BASE_URL,\"/destinations\"));case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}},_callee);}));return function getDestinations(){return _ref.apply(this,arguments);};}();// Función para crear un nuevo destino turístico\nexport var createDestination=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(destination){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.post(\"\".concat(BASE_URL,\"/destinations\"),destination);case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}},_callee2);}));return function createDestination(_x){return _ref2.apply(this,arguments);};}();// Función para obtener un destino turístico por su ID\nexport var getDestinationById=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_id){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.get(\"\".concat(BASE_URL,\"/destinations/\").concat(_id));case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 4:case\"end\":return _context3.stop();}},_callee3);}));return function getDestinationById(_x2){return _ref3.apply(this,arguments);};}();// Función para buscar destinos turísticos por nombre o ubicación\nexport var searchDestinations=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(query){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return axios.get(\"\".concat(BASE_URL,\"/destinations\"),{params:{name:query}});case 2:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 4:case\"end\":return _context4.stop();}},_callee4);}));return function searchDestinations(_x3){return _ref4.apply(this,arguments);};}();// delete\nexport var deleteDestination=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(id){var response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.next=2;return axios.delete(\"\".concat(BASE_URL,\"/destinations/\").concat(id));case 2:response=_context5.sent;return _context5.abrupt(\"return\",response.data);case 4:case\"end\":return _context5.stop();}},_callee5);}));return function deleteDestination(_x4){return _ref5.apply(this,arguments);};}();","map":{"version":3,"names":["axios","BASE_URL","getDestinations","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","concat","sent","abrupt","data","stop","apply","arguments","createDestination","_ref2","_callee2","destination","_callee2$","_context2","post","_x","getDestinationById","_ref3","_callee3","_id","_callee3$","_context3","_x2","searchDestinations","_ref4","_callee4","query","_callee4$","_context4","params","name","_x3","deleteDestination","_ref5","_callee5","id","_callee5$","_context5","delete","_x4"],"sources":["C:/Users/luism/OneDrive/Escritorio/projects/PruebaTecnicaFullstack/client/data-traveler/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:3001'; // Reemplaza con la URL de tu API backend\r\n\r\n// Función para obtener todos los destinos turísticos\r\nexport const getDestinations = async () => {\r\n  const response = await axios.get(`${BASE_URL}/destinations`);\r\n  return response.data;\r\n};\r\n\r\n// Función para crear un nuevo destino turístico\r\nexport const createDestination = async (destination) => {\r\n  const response = await axios.post(`${BASE_URL}/destinations`, destination);\r\n  return response.data;\r\n};\r\n\r\n// Función para obtener un destino turístico por su ID\r\nexport const getDestinationById = async (_id) => {\r\n  const response = await axios.get(`${BASE_URL}/destinations/${_id}`);\r\n  return response.data;\r\n};\r\n\r\n// Función para buscar destinos turísticos por nombre o ubicación\r\nexport const searchDestinations = async (query) => {\r\n  const response = await axios.get(`${BASE_URL}/destinations`, {\r\n    params: { name: query },\r\n  });\r\n  return response.data;\r\n};\r\n\r\n// delete\r\nexport const deleteDestination = async (id) => {\r\n    const response = await axios.delete(`${BASE_URL}/destinations/${id}`);\r\n    return response.data;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}